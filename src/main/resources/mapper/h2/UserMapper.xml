<?xml version ="1.0" encoding ="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0// EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Mapper and xml mapping -->
<mapper namespace="com.example.demo.repository.UserMapper">
    <!-- user registration -->
    <insert id="insertOne">
        insert into m_user( user_id
                          , password
                          , user_name
                          , birthday
                          , age
                          , gender
                          , department_id
                          , role)
        values ( #{userId}
               , #{password}
               , #{userName}
               , #{birthday}
               , #{age}
               , #{gender}
               , #{departmentId}
               , #{role})
    </insert>

    <!--    Get users-->
    <select id="findMany" parameterType="MUser" resultType="MUser">
        select * from m_user
        <where>
            <if test="userId!=null and userId != ''">
                and user_id like '%'||#{userId}||'%'
            </if>
            <if test="userName!=null and userName != ''">
                and user_name like '%'||#{userName}||'%'
            </if>
        </where>
    </select>

    <!-- Mapping definition (user) -->
    <resultMap type="com.example.demo.domain.user.model.MUser" id="user">
        <id column="user_id" property="userId"/>
        <result column="password" property="password"/>
        <result column="user_name" property="userName"/>
        <result column="birthday" property="birthday"/>
        <result column="age" property="age"/>
        <result column="gender" property="gender"/>
        <result column="department_id" property="departmentId"/>
        <result column="role"/>
        <association property="department" resultMap="department"></association>
        <collection property="salaryList" resultMap="salary" columnPrefix="salary_"></collection>
    </resultMap>

    <!-- Mapping definition (department) -->
    <resultMap type="com.example.demo.domain.user.model.Department" id="department">
        <id column="department_id" property="departmentId"/>
        <result column="department_name" property="departmentName"/>
    </resultMap>

    <!--    Mapping definition (salary)-->
    <resultMap id="salary" type="com.example.demo.domain.user.model.Salary">
        <id column="user_id" property="userId"></id>
        <id column="year_months" property="yearMonths"></id>
        <result column="salary" property="salary"></result>
    </resultMap>

    <!-- Get user(1record) -->
    <select id="findOne" resultMap="user">
        select
               mu.user_id,
               mu.password,
               mu.user_name,
               mu.birthday,
               mu.age,
               mu.gender,
               md.department_id,
               md.department_name,
               ts.user_id as salary_user_id,
               ts.year_months as salary_year_months,
               ts.salary as salary_salary
        from m_user mu
            left join m_department md on mu.department_id = md.department_id
            left join t_salary ts on mu.user_id = ts.user_id
        where mu.user_id = #{userId}
    </select>

    <!-- Update user -->
    <update id="updateOne">
        update
            m_user
        set password  = #{password}
          , user_name = #{userName}
        where user_id = #{userId}
    </update>
    <!-- Delete user -->
    <delete id="deleteOne">
        delete
        from m_user
        where user_id = #{userId}
    </delete>

</mapper>